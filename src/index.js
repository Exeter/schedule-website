// Generated by CoffeeScript 1.7.1
(function() {
  var BUSINESS_DURATION, BUSINESS_END, BUSINESS_START, Calendar, DAY, calendar, dayNames, loginElement, loginForm, monthNames;

  DAY = 1000 * 60 * 60 * 24;

  BUSINESS_START = 1000 * 60 * 60 * 7;

  BUSINESS_END = 1000 * 60 * 60 * 21;

  BUSINESS_DURATION = BUSINESS_END - BUSINESS_START;

  dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

  monthNames = ['January', 'February', 'March', 'April', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

  Calendar = (function() {
    function Calendar(wrapper, data) {
      this.wrapper = wrapper;
      this.data = data;
      this.tableHeight = this.wrapper.height();
      this.wrapper.append(this.el = $('<div>').css({
        'display': 'table-row',
        'overflow': 'hidden',
        'height': this.tableHeight + 'px'
      }));
      this.render(10);
    }

    Calendar.prototype.render = function(duration, begin) {
      var month, today, year;
      if (duration == null) {
        duration = 7;
      }
      today = new Date();
      if (begin == null) {
        year = today.getYear() + 1900;
        month = today.getMonth();
        begin = +(new Date(year, month, today.getDate() - today.getDay(), 0, 0, 0));
      }
      return this.data(begin, begin + DAY * duration, (function(_this) {
        return function(events) {
          var column, columns, day, dayStart, days, event, i, relativeEnd, relativeStart, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _results;
          days = (function() {
            var _i, _results;
            _results = [];
            for (_i = 1; 1 <= duration ? _i <= duration : _i >= duration; 1 <= duration ? _i++ : _i--) {
              _results.push([]);
            }
            return _results;
          })();
          for (_i = 0, _len = events.length; _i < _len; _i++) {
            event = events[_i];
            if ((_ref = days[Math.floor((event.start - begin) / (1000 * 60 * 60 * 24))]) != null) {
              _ref.push(event);
            }
          }
          columns = [];
          for (i = _j = 0, _len1 = days.length; _j < _len1; i = ++_j) {
            day = days[i];
            dayStart = begin + i * DAY;
            columns.push(column = $('<div>').css({
              'display': 'table-cell',
              'width': '150px',
              'padding': '2px',
              'position': 'relative',
              'text-align': 'center',
              'background': i === today.getDay() ? '#FFD' : i % 2 === 1 ? '#FFF' : '#EEE'
            }));
            column.append($('<div>').css({
              'position': 'absolute',
              'top': '0px',
              'left': '0px',
              'right': '0px'
            }).html("<div>" + dayNames[new Date(begin + DAY * i).getDay()] + "</div>\n<div>" + monthNames[new Date(begin + DAY * i).getMonth()].slice(0, 3) + " " + (new Date(begin + DAY * i).getDate()) + "</div>"));
            for (_k = 0, _len2 = day.length; _k < _len2; _k++) {
              event = day[_k];
              relativeStart = event.start - dayStart - BUSINESS_START;
              relativeEnd = dayStart + BUSINESS_END - event.end;
              column.append($('<div>').css({
                'position': 'absolute',
                'width': '100%',
                'top': relativeStart * _this.tableHeight / BUSINESS_DURATION + 'px',
                'bottom': relativeEnd * _this.tableHeight / BUSINESS_DURATION + 'px',
                'background-color': event.color
              }).html("<div class='begin-time'>" + ((new Date(event.start)).getHours()) + ":" + ((new Date(event.start)).getMinutes()) + "</div>\n<div>" + event.title + "</div>\n<div class='end-time'>" + ((new Date(event.end)).getHours()) + ":" + ((new Date(event.end)).getMinutes()) + "</div>"));
            }
          }
          _this.el.html('');
          _results = [];
          for (_l = 0, _len3 = columns.length; _l < _len3; _l++) {
            column = columns[_l];
            _results.push(_this.el.append(column));
          }
          return _results;
        };
      })(this));
    };

    return Calendar;

  })();

  calendar = new Calendar($('#calendar'), function(start, end, cb) {
    return $.ajax({
      url: '/events',
      data: {
        from: start,
        to: end
      },
      dataType: 'json',
      success: function(data) {
        console.log(start, end, data);
        return cb(data.result);
      }
    });
  });

  loginElement = $('#login-btn-wrap');

  loginForm = $('#login-form');

  $('#login-btn').click(function() {
    return BootstrapDialog.show({
      message: 'Hello'
    });
  });

}).call(this);
